apiVersion: rabbitmq.com/v1beta1
kind: RabbitmqCluster
metadata:
  name: minimal-metrics
# kubectl explain rmq.spec
spec:
  # https://hub.docker.com/_/rabbitmq?tab=tags
  image: rabbitmq:3.8.9-management
  replicas: 1
  resources:
    limits:
      memory: 4G
      cpu: 2
    requests:
      memory: 3G
      cpu: 2
  persistence:
    storage: 10Gi
  rabbitmq:
    additionalConfig: |
      # https://www.rabbitmq.com/configure.html
      vm_memory_high_watermark.absolute = 3GB
      vm_memory_high_watermark_paging_ratio = 0.99

      # https://www.rabbitmq.com/management.html#sample-retention
      # Statistics collection mode. Primarily relevant for the management plugin.
      #  * none (do not emit statistics events)
      #  * coarse (emit per-queue / per-channel / per-connection statistics)
      #  * fine (also emit per-message statistics)
      # defult=fine
      collect_statistics = coarse

      # Statistics collection interval in milliseconds (default=5000)
      collect_statistics_interval = 10000

      # supported values: basic, detailed, none
      # default=basic
      management.rates_mode = basic

      # defaults: 5, 60, 1800
      management.sample_retention_policies.global.minute = 10
      management.sample_retention_policies.global.hour = 300
      management.sample_retention_policies.global.day = 1800

      # defaults: 5, 60
      management.sample_retention_policies.basic.minute = 10
      management.sample_retention_policies.basic.hour = 300

      # default:  5
      management.sample_retention_policies.detailed.10 = 60

      # management metrics can be disabled altogether
      management_agent.disable_metrics_collector = false
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minimal-metrics-rabbitmq-perf-test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq-perf-test
  template:
    metadata:
      labels:
        app: rabbitmq-perf-test
      annotations:
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
    spec:
      containers:
      - name: perftest
        # https://hub.docker.com/r/pivotalrabbitmq/perf-test/tags
        image: pivotalrabbitmq/perf-test:2.12.0
        resources:
          limits:
            cpu: 1
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 500Mi
        command:
          - /bin/bash
          - -c
        args:
          - |-
            bin/runjava com.rabbitmq.perf.PerfTest \
              --uri "amqp://$RABBITMQ_USER:$RABBITMQ_PASS@$RABBITMQ_SERVICE:5672/%2f"
        env:
        - name: RABBITMQ_USER
          valueFrom:
            secretKeyRef:
              name: minimal-metrics-rabbitmq-default-user
              key: username
        - name: RABBITMQ_PASS
          valueFrom:
            secretKeyRef:
              name: minimal-metrics-rabbitmq-default-user
              key: password
        - name: RABBITMQ_SERVICE
          value: minimal-metrics-rabbitmq-client
        - name: PRODUCERS
          value: "2000"
        - name: CONFIRM
          value: "1"
        - name: CONSUMERS
          value: "2000"
        - name: CONSUMER_LATENCY
          value: "10000"
        - name: AUTO_DELETE
          value: "false"
        - name: SIZE
          value: "100"
        - name: QUEUE_PATTERN
          value: "minimal-metrics-non-durable-%d"
        - name: QUEUE_PATTERN_FROM
          value: "1"
        - name: QUEUE_PATTERN_TO
          value: "2000"
        - name: QUEUE_ARGS
          value: "x-max-length=100"
        - name: ROUTING_KEY
          value: "minimal-metrics-non-durable"
        - name: METRICS_PROMETHEUS
          value: "true"
        - name: PUBLISHING_INTERVAL
          value: "5"
        - name: HEARTBEAT_SENDER_THREADS
          value: "10"
        - name: PRODUCER_RANDOM_START_DELAY
          value: "1800"
        - name: PRODUCER_SCHEDULER_THREADS
          value: "10"
        - name: CONSUMERS_THREAD_POOLS
          value: "10"
        - name: NIO_THREAD_POOL
          value: "10"
